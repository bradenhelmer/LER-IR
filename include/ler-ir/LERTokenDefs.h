// TokenDefs.h
// ~~~~~~~~~~~
// Token macros
#ifndef LER_TOKEN
#define LER_TOKEN(X)
#endif

#ifndef LER_LOOP
#define LER_LOOP(TYPE, SYMBOL) LER_TOKEN(TYPE)
#endif

#ifndef LER_OPERATOR
#define LER_OPERATOR(TYPE, SYMBOL) LER_TOKEN(TYPE)
#endif

#ifndef LER_PUNCTUATOR
#define LER_PUNCTUATOR(TYPE, SYMBOL) LER_TOKEN(TYPE)
#endif

LER_TOKEN(ID)
LER_TOKEN(NUMBER)
LER_TOKEN(NEWLINE)
LER_TOKEN(LER_EOF)

LER_LOOP(REGULAR_FOR, '^R')
LER_LOOP(SUMMATION, '^S')
LER_LOOP(PRODUCT, '^P')
LER_LOOP(WHILE, '^W')

LER_OPERATOR(ASSIGN, '=')
LER_OPERATOR(LAND, '&&')
LER_OPERATOR(LOR, '||')
LER_OPERATOR(EQ, '==')
LER_OPERATOR(NE, '!=')
LER_OPERATOR(GT, '>')
LER_OPERATOR(GE, '>=')
LER_OPERATOR(LT, '<')
LER_OPERATOR(LE, '<=')
LER_OPERATOR(ADD, '+')
LER_OPERATOR(SUB, '-')
LER_OPERATOR(MUL, '*')
LER_OPERATOR(DIV, '/')

LER_PUNCTUATOR(SUBSCRIPT, '$')
LER_PUNCTUATOR(INDEX, '|')
LER_PUNCTUATOR(COMMA, ',')
LER_PUNCTUATOR(OPEN_BRACKET, '[')
LER_PUNCTUATOR(CLOSE_BRACKET, ']')
LER_PUNCTUATOR(OPEN_PAREN, '(')
LER_PUNCTUATOR(CLOSE_PAREN, ')')
/*LER_PUNCTUATOR(WS, ' ')*/

#undef LER_PUNCTUATOR
#undef LER_OPERATOR
#undef LER_LOOP
#undef LER_TOKEN
